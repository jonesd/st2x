<project name="ug2java-translator" default="translate-full" basedir=".">
    <description>
    	Translate Udanax-Gold Smalltalk source into Java source code
    </description>

  <property environment="env"/>
	
  <!-- set global properties for this build -->
  <property name="name" value="ug2java-translator"/>
  <property name="src" location="${basedir}/src"/>
  <property name="src.test" location="${basedir}/src-test"/>
  <property name="build" location="${basedir}/build"/>
  <property name="dist"  location="${basedir}/dist"/>
  <property name="lib.dir" location="${basedir}/lib"/>
  <property name="docs.dir" location="${basedir}/docs"/>
  <property name="ant.home" location="${env.ANT_HOME}"/>
  <property name="clover.historical.dir" location="${basedir}/.clover_historical"/>
  <property name="clover.coverage.dir" location="${build}/clover_coverage"/>
  	
  
  <property name="udanaxgold.dir" location="${basedir}/../udanax-gold"/>
  <property name="translated.dir" location="${basedir}/../abora-gold/src-gen"/>
  
		
  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  	<mkdir dir="${clover.coverage.dir}"/>
  	<mkdir dir="${dist}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <javac destdir="${build}" extdirs="${lib.dir}">
	    	<src path="${src}"/>
    		<src path="${src.test}"/>
    	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${name}-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
	
	<target name="clean-translated">
	  	<delete dir="${translated.dir}"/>
	</target>
  
	<target name="translate-full" depends="clean-translated, translate"/>
	
  <target name="translate" depends="compile">
  	<java classname="org.abora.ug2java.TranslateSmalltalk">
  		<arg value="${translated.dir}"/>
  		<arg value="${udanaxgold.dir}/udanax-top.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-wparray.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-Xpp-Basic.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-Xpp-Become.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-Xpp-Converters.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-Xpp-fluid.st"/>
  		<arg value="${udanaxgold.dir}/Xanadu-Xpp-Packages.st"/>
  		<classpath>
  			<pathelement path="${build}"/>
  		</classpath>
  	</java>
  </target>

  <target name="test" depends="compile">
  	<mkdir dir="${build}/junit_coverage"/>
  	<junit printsummary="true">
  		<batchtest todir="${build}/junit_coverage">
  			<fileset dir="${src.test}">
  				<include name="**/*Test*.java"/>
  			</fileset>
  		</batchtest>
  		<classpath>
  			<pathelement path="${build}"/>
  			<pathelement path="${ant.home}/lib/clover.jar"/>
  		</classpath>
  		<formatter type="xml"/>
  	</junit>
  	<junitreport todir="${build}/junit_coverage">
  	  <fileset dir="${build}/junit_coverage">
  	    <include name="TEST-*.xml"/>
  	  </fileset>
  	  <report format="frames" todir="${docs.dir}/junit_report"/>
  	</junitreport>
  </target>

	
	<target name="clover.init">
		<taskdef resource="clovertasks"/>
	</target>
	
	<target name="with.clover" depends="clover.init">
		<clover-setup initString="${clover.coverage.dir}/mycoverage.db">
			<files excludes="**/*Test*.*"/>
		</clover-setup>
	</target> 
	
	<target name="clover.html" depends="with.clover">
		<property name="clover.includesource" value="false"/>
		<clover-historypoint historyDir="${clover.historical.dir}"/>
		<clover-report>
			<current outfile="${docs.dir}/clover" title="Abora Project: Udanax2Gold Translator">
				<format type="html" srcLevel="${clover.includesource}"/>
			</current>
			<historical outfile="${docs.dir}/clover_historical" historyDir="${clover.historical.dir}" title="Abora Project: Udanax2Gold Translator">
				<format type="html"/>
			</historical> 
		</clover-report>
	</target> 

	<target name="clover.view" depends="with.clover">
		<clover-view/>
	</target>
	

  <target name="findbugs" depends="compile">
  	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	 <property name="findbugs.home" value="/Users/jonesd/Applications/findbugs-0.9.1" />
  	<mkdir dir="${docs.dir}/findbugs"/>
	    <findbugs home="${findbugs.home}"
	              output="html"
	              outputFile="${docs.dir}/findbugs/index.html" >
	    	<auxClasspath path="${ant.home}/lib/junit.jar"/>
	      <sourcePath path="${src};${src.test}" />
	      <class location="${build}" />
	    </findbugs>
	  </target>
</project>
