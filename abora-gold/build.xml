<project name="abora-gold" default="init" basedir=".">
    <description>
    	Abora Gold.
    </description>

	  <property environment="env"/>

	<!-- set global properties for this build -->
	<property name="name" value="abora-gold"/>
	<property name="Name" value="Abora-Gold"/>
	
	<property name="src" value="${basedir}/src"/>
	<property name="src-gen" value="${basedir}/src-gen"/>
	  <property name="src.test" location="${basedir}/src-test"/>
	  <property name="build" location="${basedir}/build"/>
	  <property name="dist"  location="${basedir}/dist"/>
	  <property name="docs.dir" location="${basedir}/docs"/>
	<property name="javadoc.dir" value="${basedir}/doc/api"/>
	  <property name="ant.home" location="${env.ANT_HOME}"/>
	  	
	  <property name="clover.historical.dir" location="${basedir}/.clover_historical"/>
	  <property name="clover.coverage.dir" location="${basedir}/.clover_coverage"/>
   
  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  	<mkdir dir="${clover.coverage.dir}"/>
  	<mkdir dir="${dist}"/>
  </target>

	  <target name="clean"
	        description="clean up" >
	    <delete dir="${build}"/>
	    <delete dir="${dist}"/>
	  </target>

	  <target name="compile" depends="init"
	        description="compile the source " >
	    <javac destdir="${build}" extdirs="${lib.dir}">
			<src path="${src}"/>
	    		<src path="${src-gen}"/>
	    		<src path="${src.test}"/>
	    	</javac>
	  </target>

	  <target name="test" depends="compile">
	  	<mkdir dir="${build}/junit_coverage"/>
	  	<junit printsummary="true" haltonfailure="true">
	  		<batchtest todir="${build}/junit_coverage">
	  			<fileset dir="${src.test}">
	  				<include name="**/*Test*.java"/>
	  				<exclude name="**/*TestCase.java"/>
	  			</fileset>
	  		</batchtest>
	  		<classpath>
	  			<pathelement path="${build}"/>
	  			<pathelement path="${ant.home}/lib/clover.jar"/>
	  			<!-- to read in tester trace.txt files -->
	  			<pathelement path="${src.test}/"/>
	  		</classpath>
	  		<formatter type="xml"/>
	  	</junit>
	  	<junitreport todir="${build}/junit_coverage">
	  	  <fileset dir="${build}/junit_coverage">
	  	    <include name="TEST-*.xml"/>
	  	  </fileset>
	    	  <report format="frames" todir="${docs.dir}/junit_report"/>
	  	</junitreport>
	  </target>


	<target name="javadoc.br" depends="init">
	<replaceregexp match="^(\s*)\* (.*)$" replace="\1\* \2&lt;br&gt;" byline="true">
		<fileset dir="src-gen">
		<include name="**/*.java"/>
		</fileset>
	</replaceregexp>
	</target>


<target name="javadoc" depends="init">
	<mkdir dir="${javadoc.dir}"/>
	<delete dir="${javadoc.dir}"/>
		<javadoc destdir="${javadoc.dir}"
           author="true"
           version="true"
           use="false"
           windowtitle="${Name} API"
           noindex="true"
           verbose="false"
           nodeprecatedlist="true"
           >
           <!-- additionalparam="-linksource" -->
           
		<packageset dir="${src}" defaultexcludes="yes">
			<include name="org/abora/gold/**" />
			<exclude name="**/tests/**"/>
		</packageset>
		<packageset dir="${src-gen}" defaultexcludes="yes">
			<include name="org/abora/gold/**" />
			<exclude name="**/tests/**"/>
		</packageset>
       
		<doctitle><![CDATA[<h1>${Name}</h1>]]></doctitle>
		<bottom><![CDATA[<i>Translation - Copyright &#169; 2003 David G Jones. All Rights Reserved.</i><br><i>Original Udanax-Gold - Copyright &#169; 1979-1999 Udanax.com. All rights reserved.</i>]]></bottom>
		<tag name="todo" scope="all" description="To do:" />
<!--    <group title="Group 1 Packages" packages="com.dummy.test.a*"/> -->
<!--    <group title="Group 2 Packages" packages="com.dummy.test.b*:com.dummy.test.c*"/> -->
<!--    <link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp"/> -->
<!--    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/> -->
	</javadoc>
</target>

	<target name="clover.init">
		<taskdef resource="clovertasks"/>
	</target>
	
	<target name="with.clover" depends="clover.init">
		<clover-setup initString="${clover.coverage.dir}/mycoverage.db">
			<files excludes="**/*Test*.*"/>
		</clover-setup>
	</target> 
	
	<target name="clover.historypoint" depends="with.clover">
		<clover-historypoint historyDir="${clover.historical.dir}"/>
	</target>

	
	<target name="clover.html" depends="with.clover">
		<property name="clover.includesource" value="false"/>
		<clover-report>
			<current outfile="${docs.dir}/clover" title="Abora Project: Abora-Gold">
				<format type="html" srcLevel="${clover.includesource}"/>
			</current>
			<historical outfile="${docs.dir}/clover_historical" historyDir="${clover.historical.dir}" title="Abora Project: Abora-Gold">
				<format type="html"/>
			</historical> 
		</clover-report>
	</target> 

	<target name="clover.view" depends="with.clover">
		<clover-view/>
	</target>
	

  <target name="findbugs" depends="compile">
  	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
	 <property name="findbugs.home" value="/Users/jonesd/Applications/findbugs-0.9.1" />
  	<mkdir dir="${docs.dir}/findbugs"/>
	    <findbugs home="${findbugs.home}"
	              output="html"
            outputFile="${docs.dir}/findbugs/index.html"
	    			jvmargs="-Xmx768m">
	    	<auxClasspath path="${ant.home}/lib/junit.jar"/>
	      <sourcePath path="${src-gen};${src};${src.test}" />
	      <class location="${build}" />
	    </findbugs>
	  </target>

</project>
